/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 2.1.8
 * XML versions: imx233:3.2.0
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN__IMX233__TVENC__H__
#define __HEADERGEN__IMX233__TVENC__H__

#define REGS_TVENC_BASE (0x80038000)

#define REGS_TVENC_VERSION "3.2.0"

/**
 * Register: HW_TVENC_CTRL
 * Address: 0
 * SCT: yes
*/
#define HW_TVENC_CTRL                               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x0 + 0x0))
#define HW_TVENC_CTRL_SET                           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x0 + 0x4))
#define HW_TVENC_CTRL_CLR                           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x0 + 0x8))
#define HW_TVENC_CTRL_TOG                           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x0 + 0xc))
#define BP_TVENC_CTRL_SFTRST                        31
#define BM_TVENC_CTRL_SFTRST                        0x80000000
#define BF_TVENC_CTRL_SFTRST(v)                     (((v) << 31) & 0x80000000)
#define BP_TVENC_CTRL_CLKGATE                       30
#define BM_TVENC_CTRL_CLKGATE                       0x40000000
#define BF_TVENC_CTRL_CLKGATE(v)                    (((v) << 30) & 0x40000000)
#define BP_TVENC_CTRL_TVENC_MACROVISION_PRESENT     29
#define BM_TVENC_CTRL_TVENC_MACROVISION_PRESENT     0x20000000
#define BF_TVENC_CTRL_TVENC_MACROVISION_PRESENT(v)  (((v) << 29) & 0x20000000)
#define BP_TVENC_CTRL_TVENC_COMPOSITE_PRESENT       28
#define BM_TVENC_CTRL_TVENC_COMPOSITE_PRESENT       0x10000000
#define BF_TVENC_CTRL_TVENC_COMPOSITE_PRESENT(v)    (((v) << 28) & 0x10000000)
#define BP_TVENC_CTRL_TVENC_SVIDEO_PRESENT          27
#define BM_TVENC_CTRL_TVENC_SVIDEO_PRESENT          0x8000000
#define BF_TVENC_CTRL_TVENC_SVIDEO_PRESENT(v)       (((v) << 27) & 0x8000000)
#define BP_TVENC_CTRL_TVENC_COMPONENT_PRESENT       26
#define BM_TVENC_CTRL_TVENC_COMPONENT_PRESENT       0x4000000
#define BF_TVENC_CTRL_TVENC_COMPONENT_PRESENT(v)    (((v) << 26) & 0x4000000)
#define BP_TVENC_CTRL_RSRVD1                        6
#define BM_TVENC_CTRL_RSRVD1                        0x3ffffc0
#define BF_TVENC_CTRL_RSRVD1(v)                     (((v) << 6) & 0x3ffffc0)
#define BP_TVENC_CTRL_DAC_FIFO_NO_WRITE             5
#define BM_TVENC_CTRL_DAC_FIFO_NO_WRITE             0x20
#define BF_TVENC_CTRL_DAC_FIFO_NO_WRITE(v)          (((v) << 5) & 0x20)
#define BP_TVENC_CTRL_DAC_FIFO_NO_READ              4
#define BM_TVENC_CTRL_DAC_FIFO_NO_READ              0x10
#define BF_TVENC_CTRL_DAC_FIFO_NO_READ(v)           (((v) << 4) & 0x10)
#define BP_TVENC_CTRL_DAC_DATA_FIFO_RST             3
#define BM_TVENC_CTRL_DAC_DATA_FIFO_RST             0x8
#define BF_TVENC_CTRL_DAC_DATA_FIFO_RST(v)          (((v) << 3) & 0x8)
#define BP_TVENC_CTRL_RSRVD2                        1
#define BM_TVENC_CTRL_RSRVD2                        0x6
#define BF_TVENC_CTRL_RSRVD2(v)                     (((v) << 1) & 0x6)
#define BP_TVENC_CTRL_DAC_MUX_MODE                  0
#define BM_TVENC_CTRL_DAC_MUX_MODE                  0x1
#define BF_TVENC_CTRL_DAC_MUX_MODE(v)               (((v) << 0) & 0x1)

/**
 * Register: HW_TVENC_CONFIG
 * Address: 0x10
 * SCT: yes
*/
#define HW_TVENC_CONFIG                     (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x10 + 0x0))
#define HW_TVENC_CONFIG_SET                 (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x10 + 0x4))
#define HW_TVENC_CONFIG_CLR                 (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x10 + 0x8))
#define HW_TVENC_CONFIG_TOG                 (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x10 + 0xc))
#define BP_TVENC_CONFIG_RSRVD5              28
#define BM_TVENC_CONFIG_RSRVD5              0xf0000000
#define BF_TVENC_CONFIG_RSRVD5(v)           (((v) << 28) & 0xf0000000)
#define BP_TVENC_CONFIG_DEFAULT_PICFORM     27
#define BM_TVENC_CONFIG_DEFAULT_PICFORM     0x8000000
#define BF_TVENC_CONFIG_DEFAULT_PICFORM(v)  (((v) << 27) & 0x8000000)
#define BP_TVENC_CONFIG_YDEL_ADJ            24
#define BM_TVENC_CONFIG_YDEL_ADJ            0x7000000
#define BF_TVENC_CONFIG_YDEL_ADJ(v)         (((v) << 24) & 0x7000000)
#define BP_TVENC_CONFIG_RSRVD4              23
#define BM_TVENC_CONFIG_RSRVD4              0x800000
#define BF_TVENC_CONFIG_RSRVD4(v)           (((v) << 23) & 0x800000)
#define BP_TVENC_CONFIG_RSRVD3              22
#define BM_TVENC_CONFIG_RSRVD3              0x400000
#define BF_TVENC_CONFIG_RSRVD3(v)           (((v) << 22) & 0x400000)
#define BP_TVENC_CONFIG_ADD_YPBPR_PED       21
#define BM_TVENC_CONFIG_ADD_YPBPR_PED       0x200000
#define BF_TVENC_CONFIG_ADD_YPBPR_PED(v)    (((v) << 21) & 0x200000)
#define BP_TVENC_CONFIG_PAL_SHAPE           20
#define BM_TVENC_CONFIG_PAL_SHAPE           0x100000
#define BF_TVENC_CONFIG_PAL_SHAPE(v)        (((v) << 20) & 0x100000)
#define BP_TVENC_CONFIG_NO_PED              19
#define BM_TVENC_CONFIG_NO_PED              0x80000
#define BF_TVENC_CONFIG_NO_PED(v)           (((v) << 19) & 0x80000)
#define BP_TVENC_CONFIG_COLOR_BAR_EN        18
#define BM_TVENC_CONFIG_COLOR_BAR_EN        0x40000
#define BF_TVENC_CONFIG_COLOR_BAR_EN(v)     (((v) << 18) & 0x40000)
#define BP_TVENC_CONFIG_YGAIN_SEL           16
#define BM_TVENC_CONFIG_YGAIN_SEL           0x30000
#define BF_TVENC_CONFIG_YGAIN_SEL(v)        (((v) << 16) & 0x30000)
#define BP_TVENC_CONFIG_CGAIN               14
#define BM_TVENC_CONFIG_CGAIN               0xc000
#define BF_TVENC_CONFIG_CGAIN(v)            (((v) << 14) & 0xc000)
#define BP_TVENC_CONFIG_CLK_PHS             12
#define BM_TVENC_CONFIG_CLK_PHS             0x3000
#define BF_TVENC_CONFIG_CLK_PHS(v)          (((v) << 12) & 0x3000)
#define BP_TVENC_CONFIG_RSRVD2              11
#define BM_TVENC_CONFIG_RSRVD2              0x800
#define BF_TVENC_CONFIG_RSRVD2(v)           (((v) << 11) & 0x800)
#define BP_TVENC_CONFIG_FSYNC_ENBL          10
#define BM_TVENC_CONFIG_FSYNC_ENBL          0x400
#define BF_TVENC_CONFIG_FSYNC_ENBL(v)       (((v) << 10) & 0x400)
#define BP_TVENC_CONFIG_FSYNC_PHS           9
#define BM_TVENC_CONFIG_FSYNC_PHS           0x200
#define BF_TVENC_CONFIG_FSYNC_PHS(v)        (((v) << 9) & 0x200)
#define BP_TVENC_CONFIG_HSYNC_PHS           8
#define BM_TVENC_CONFIG_HSYNC_PHS           0x100
#define BF_TVENC_CONFIG_HSYNC_PHS(v)        (((v) << 8) & 0x100)
#define BP_TVENC_CONFIG_VSYNC_PHS           7
#define BM_TVENC_CONFIG_VSYNC_PHS           0x80
#define BF_TVENC_CONFIG_VSYNC_PHS(v)        (((v) << 7) & 0x80)
#define BP_TVENC_CONFIG_SYNC_MODE           4
#define BM_TVENC_CONFIG_SYNC_MODE           0x70
#define BF_TVENC_CONFIG_SYNC_MODE(v)        (((v) << 4) & 0x70)
#define BP_TVENC_CONFIG_RSRVD1              3
#define BM_TVENC_CONFIG_RSRVD1              0x8
#define BF_TVENC_CONFIG_RSRVD1(v)           (((v) << 3) & 0x8)
#define BP_TVENC_CONFIG_ENCD_MODE           0
#define BM_TVENC_CONFIG_ENCD_MODE           0x7
#define BF_TVENC_CONFIG_ENCD_MODE(v)        (((v) << 0) & 0x7)

/**
 * Register: HW_TVENC_FILTCTRL
 * Address: 0x20
 * SCT: yes
*/
#define HW_TVENC_FILTCTRL                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x20 + 0x0))
#define HW_TVENC_FILTCTRL_SET               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x20 + 0x4))
#define HW_TVENC_FILTCTRL_CLR               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x20 + 0x8))
#define HW_TVENC_FILTCTRL_TOG               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x20 + 0xc))
#define BP_TVENC_FILTCTRL_RSRVD1            20
#define BM_TVENC_FILTCTRL_RSRVD1            0xfff00000
#define BF_TVENC_FILTCTRL_RSRVD1(v)         (((v) << 20) & 0xfff00000)
#define BP_TVENC_FILTCTRL_YSHARP_BW         19
#define BM_TVENC_FILTCTRL_YSHARP_BW         0x80000
#define BF_TVENC_FILTCTRL_YSHARP_BW(v)      (((v) << 19) & 0x80000)
#define BP_TVENC_FILTCTRL_YD_OFFSETSEL      18
#define BM_TVENC_FILTCTRL_YD_OFFSETSEL      0x40000
#define BF_TVENC_FILTCTRL_YD_OFFSETSEL(v)   (((v) << 18) & 0x40000)
#define BP_TVENC_FILTCTRL_SEL_YLPF          17
#define BM_TVENC_FILTCTRL_SEL_YLPF          0x20000
#define BF_TVENC_FILTCTRL_SEL_YLPF(v)       (((v) << 17) & 0x20000)
#define BP_TVENC_FILTCTRL_SEL_CLPF          16
#define BM_TVENC_FILTCTRL_SEL_CLPF          0x10000
#define BF_TVENC_FILTCTRL_SEL_CLPF(v)       (((v) << 16) & 0x10000)
#define BP_TVENC_FILTCTRL_SEL_YSHARP        15
#define BM_TVENC_FILTCTRL_SEL_YSHARP        0x8000
#define BF_TVENC_FILTCTRL_SEL_YSHARP(v)     (((v) << 15) & 0x8000)
#define BP_TVENC_FILTCTRL_YLPF_COEFSEL      14
#define BM_TVENC_FILTCTRL_YLPF_COEFSEL      0x4000
#define BF_TVENC_FILTCTRL_YLPF_COEFSEL(v)   (((v) << 14) & 0x4000)
#define BP_TVENC_FILTCTRL_COEFSEL_CLPF      13
#define BM_TVENC_FILTCTRL_COEFSEL_CLPF      0x2000
#define BF_TVENC_FILTCTRL_COEFSEL_CLPF(v)   (((v) << 13) & 0x2000)
#define BP_TVENC_FILTCTRL_YS_GAINSGN        12
#define BM_TVENC_FILTCTRL_YS_GAINSGN        0x1000
#define BF_TVENC_FILTCTRL_YS_GAINSGN(v)     (((v) << 12) & 0x1000)
#define BP_TVENC_FILTCTRL_YS_GAINSEL        10
#define BM_TVENC_FILTCTRL_YS_GAINSEL        0xc00
#define BF_TVENC_FILTCTRL_YS_GAINSEL(v)     (((v) << 10) & 0xc00)
#define BP_TVENC_FILTCTRL_RSRVD2            9
#define BM_TVENC_FILTCTRL_RSRVD2            0x200
#define BF_TVENC_FILTCTRL_RSRVD2(v)         (((v) << 9) & 0x200)
#define BP_TVENC_FILTCTRL_RSRVD3            8
#define BM_TVENC_FILTCTRL_RSRVD3            0x100
#define BF_TVENC_FILTCTRL_RSRVD3(v)         (((v) << 8) & 0x100)
#define BP_TVENC_FILTCTRL_RSRVD4            0
#define BM_TVENC_FILTCTRL_RSRVD4            0xff
#define BF_TVENC_FILTCTRL_RSRVD4(v)         (((v) << 0) & 0xff)

/**
 * Register: HW_TVENC_SYNCOFFSET
 * Address: 0x30
 * SCT: yes
*/
#define HW_TVENC_SYNCOFFSET             (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x30 + 0x0))
#define HW_TVENC_SYNCOFFSET_SET         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x30 + 0x4))
#define HW_TVENC_SYNCOFFSET_CLR         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x30 + 0x8))
#define HW_TVENC_SYNCOFFSET_TOG         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x30 + 0xc))
#define BP_TVENC_SYNCOFFSET_RSRVD1      31
#define BM_TVENC_SYNCOFFSET_RSRVD1      0x80000000
#define BF_TVENC_SYNCOFFSET_RSRVD1(v)   (((v) << 31) & 0x80000000)
#define BP_TVENC_SYNCOFFSET_HSO         20
#define BM_TVENC_SYNCOFFSET_HSO         0x7ff00000
#define BF_TVENC_SYNCOFFSET_HSO(v)      (((v) << 20) & 0x7ff00000)
#define BP_TVENC_SYNCOFFSET_VSO         10
#define BM_TVENC_SYNCOFFSET_VSO         0xffc00
#define BF_TVENC_SYNCOFFSET_VSO(v)      (((v) << 10) & 0xffc00)
#define BP_TVENC_SYNCOFFSET_HLC         0
#define BM_TVENC_SYNCOFFSET_HLC         0x3ff
#define BF_TVENC_SYNCOFFSET_HLC(v)      (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_HTIMINGSYNC0
 * Address: 0x40
 * SCT: yes
*/
#define HW_TVENC_HTIMINGSYNC0               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x40 + 0x0))
#define HW_TVENC_HTIMINGSYNC0_SET           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x40 + 0x4))
#define HW_TVENC_HTIMINGSYNC0_CLR           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x40 + 0x8))
#define HW_TVENC_HTIMINGSYNC0_TOG           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x40 + 0xc))
#define BP_TVENC_HTIMINGSYNC0_RSRVD2        26
#define BM_TVENC_HTIMINGSYNC0_RSRVD2        0xfc000000
#define BF_TVENC_HTIMINGSYNC0_RSRVD2(v)     (((v) << 26) & 0xfc000000)
#define BP_TVENC_HTIMINGSYNC0_SYNC_END      16
#define BM_TVENC_HTIMINGSYNC0_SYNC_END      0x3ff0000
#define BF_TVENC_HTIMINGSYNC0_SYNC_END(v)   (((v) << 16) & 0x3ff0000)
#define BP_TVENC_HTIMINGSYNC0_RSRVD1        10
#define BM_TVENC_HTIMINGSYNC0_RSRVD1        0xfc00
#define BF_TVENC_HTIMINGSYNC0_RSRVD1(v)     (((v) << 10) & 0xfc00)
#define BP_TVENC_HTIMINGSYNC0_SYNC_STRT     0
#define BM_TVENC_HTIMINGSYNC0_SYNC_STRT     0x3ff
#define BF_TVENC_HTIMINGSYNC0_SYNC_STRT(v)  (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_HTIMINGSYNC1
 * Address: 0x50
 * SCT: yes
*/
#define HW_TVENC_HTIMINGSYNC1               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x50 + 0x0))
#define HW_TVENC_HTIMINGSYNC1_SET           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x50 + 0x4))
#define HW_TVENC_HTIMINGSYNC1_CLR           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x50 + 0x8))
#define HW_TVENC_HTIMINGSYNC1_TOG           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x50 + 0xc))
#define BP_TVENC_HTIMINGSYNC1_RSRVD2        26
#define BM_TVENC_HTIMINGSYNC1_RSRVD2        0xfc000000
#define BF_TVENC_HTIMINGSYNC1_RSRVD2(v)     (((v) << 26) & 0xfc000000)
#define BP_TVENC_HTIMINGSYNC1_SYNC_EQEND    16
#define BM_TVENC_HTIMINGSYNC1_SYNC_EQEND    0x3ff0000
#define BF_TVENC_HTIMINGSYNC1_SYNC_EQEND(v) (((v) << 16) & 0x3ff0000)
#define BP_TVENC_HTIMINGSYNC1_RSRVD1        10
#define BM_TVENC_HTIMINGSYNC1_RSRVD1        0xfc00
#define BF_TVENC_HTIMINGSYNC1_RSRVD1(v)     (((v) << 10) & 0xfc00)
#define BP_TVENC_HTIMINGSYNC1_SYNC_SREND    0
#define BM_TVENC_HTIMINGSYNC1_SYNC_SREND    0x3ff
#define BF_TVENC_HTIMINGSYNC1_SYNC_SREND(v) (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_HTIMINGACTIVE
 * Address: 0x60
 * SCT: yes
*/
#define HW_TVENC_HTIMINGACTIVE              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x60 + 0x0))
#define HW_TVENC_HTIMINGACTIVE_SET          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x60 + 0x4))
#define HW_TVENC_HTIMINGACTIVE_CLR          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x60 + 0x8))
#define HW_TVENC_HTIMINGACTIVE_TOG          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x60 + 0xc))
#define BP_TVENC_HTIMINGACTIVE_RSRVD2       26
#define BM_TVENC_HTIMINGACTIVE_RSRVD2       0xfc000000
#define BF_TVENC_HTIMINGACTIVE_RSRVD2(v)    (((v) << 26) & 0xfc000000)
#define BP_TVENC_HTIMINGACTIVE_ACTV_END     16
#define BM_TVENC_HTIMINGACTIVE_ACTV_END     0x3ff0000
#define BF_TVENC_HTIMINGACTIVE_ACTV_END(v)  (((v) << 16) & 0x3ff0000)
#define BP_TVENC_HTIMINGACTIVE_RSRVD1       10
#define BM_TVENC_HTIMINGACTIVE_RSRVD1       0xfc00
#define BF_TVENC_HTIMINGACTIVE_RSRVD1(v)    (((v) << 10) & 0xfc00)
#define BP_TVENC_HTIMINGACTIVE_ACTV_STRT    0
#define BM_TVENC_HTIMINGACTIVE_ACTV_STRT    0x3ff
#define BF_TVENC_HTIMINGACTIVE_ACTV_STRT(v) (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_HTIMINGBURST0
 * Address: 0x70
 * SCT: yes
*/
#define HW_TVENC_HTIMINGBURST0                  (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x70 + 0x0))
#define HW_TVENC_HTIMINGBURST0_SET              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x70 + 0x4))
#define HW_TVENC_HTIMINGBURST0_CLR              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x70 + 0x8))
#define HW_TVENC_HTIMINGBURST0_TOG              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x70 + 0xc))
#define BP_TVENC_HTIMINGBURST0_RSRVD2           26
#define BM_TVENC_HTIMINGBURST0_RSRVD2           0xfc000000
#define BF_TVENC_HTIMINGBURST0_RSRVD2(v)        (((v) << 26) & 0xfc000000)
#define BP_TVENC_HTIMINGBURST0_WBRST_STRT       16
#define BM_TVENC_HTIMINGBURST0_WBRST_STRT       0x3ff0000
#define BF_TVENC_HTIMINGBURST0_WBRST_STRT(v)    (((v) << 16) & 0x3ff0000)
#define BP_TVENC_HTIMINGBURST0_RSRVD1           10
#define BM_TVENC_HTIMINGBURST0_RSRVD1           0xfc00
#define BF_TVENC_HTIMINGBURST0_RSRVD1(v)        (((v) << 10) & 0xfc00)
#define BP_TVENC_HTIMINGBURST0_NBRST_STRT       0
#define BM_TVENC_HTIMINGBURST0_NBRST_STRT       0x3ff
#define BF_TVENC_HTIMINGBURST0_NBRST_STRT(v)    (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_HTIMINGBURST1
 * Address: 0x80
 * SCT: yes
*/
#define HW_TVENC_HTIMINGBURST1              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x80 + 0x0))
#define HW_TVENC_HTIMINGBURST1_SET          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x80 + 0x4))
#define HW_TVENC_HTIMINGBURST1_CLR          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x80 + 0x8))
#define HW_TVENC_HTIMINGBURST1_TOG          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x80 + 0xc))
#define BP_TVENC_HTIMINGBURST1_RSRVD1       10
#define BM_TVENC_HTIMINGBURST1_RSRVD1       0xfffffc00
#define BF_TVENC_HTIMINGBURST1_RSRVD1(v)    (((v) << 10) & 0xfffffc00)
#define BP_TVENC_HTIMINGBURST1_BRST_END     0
#define BM_TVENC_HTIMINGBURST1_BRST_END     0x3ff
#define BF_TVENC_HTIMINGBURST1_BRST_END(v)  (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_VTIMING0
 * Address: 0x90
 * SCT: yes
*/
#define HW_TVENC_VTIMING0                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x90 + 0x0))
#define HW_TVENC_VTIMING0_SET               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x90 + 0x4))
#define HW_TVENC_VTIMING0_CLR               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x90 + 0x8))
#define HW_TVENC_VTIMING0_TOG               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x90 + 0xc))
#define BP_TVENC_VTIMING0_RSRVD3            26
#define BM_TVENC_VTIMING0_RSRVD3            0xfc000000
#define BF_TVENC_VTIMING0_RSRVD3(v)         (((v) << 26) & 0xfc000000)
#define BP_TVENC_VTIMING0_VSTRT_PREEQ       16
#define BM_TVENC_VTIMING0_VSTRT_PREEQ       0x3ff0000
#define BF_TVENC_VTIMING0_VSTRT_PREEQ(v)    (((v) << 16) & 0x3ff0000)
#define BP_TVENC_VTIMING0_RSRVD2            14
#define BM_TVENC_VTIMING0_RSRVD2            0xc000
#define BF_TVENC_VTIMING0_RSRVD2(v)         (((v) << 14) & 0xc000)
#define BP_TVENC_VTIMING0_VSTRT_ACTV        8
#define BM_TVENC_VTIMING0_VSTRT_ACTV        0x3f00
#define BF_TVENC_VTIMING0_VSTRT_ACTV(v)     (((v) << 8) & 0x3f00)
#define BP_TVENC_VTIMING0_RSRVD1            6
#define BM_TVENC_VTIMING0_RSRVD1            0xc0
#define BF_TVENC_VTIMING0_RSRVD1(v)         (((v) << 6) & 0xc0)
#define BP_TVENC_VTIMING0_VSTRT_SUBPH       0
#define BM_TVENC_VTIMING0_VSTRT_SUBPH       0x3f
#define BF_TVENC_VTIMING0_VSTRT_SUBPH(v)    (((v) << 0) & 0x3f)

/**
 * Register: HW_TVENC_VTIMING1
 * Address: 0xa0
 * SCT: yes
*/
#define HW_TVENC_VTIMING1                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xa0 + 0x0))
#define HW_TVENC_VTIMING1_SET               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xa0 + 0x4))
#define HW_TVENC_VTIMING1_CLR               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xa0 + 0x8))
#define HW_TVENC_VTIMING1_TOG               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xa0 + 0xc))
#define BP_TVENC_VTIMING1_RSRVD3            30
#define BM_TVENC_VTIMING1_RSRVD3            0xc0000000
#define BF_TVENC_VTIMING1_RSRVD3(v)         (((v) << 30) & 0xc0000000)
#define BP_TVENC_VTIMING1_VSTRT_POSTEQ      24
#define BM_TVENC_VTIMING1_VSTRT_POSTEQ      0x3f000000
#define BF_TVENC_VTIMING1_VSTRT_POSTEQ(v)   (((v) << 24) & 0x3f000000)
#define BP_TVENC_VTIMING1_RSRVD2            22
#define BM_TVENC_VTIMING1_RSRVD2            0xc00000
#define BF_TVENC_VTIMING1_RSRVD2(v)         (((v) << 22) & 0xc00000)
#define BP_TVENC_VTIMING1_VSTRT_SERRA       16
#define BM_TVENC_VTIMING1_VSTRT_SERRA       0x3f0000
#define BF_TVENC_VTIMING1_VSTRT_SERRA(v)    (((v) << 16) & 0x3f0000)
#define BP_TVENC_VTIMING1_RSRVD1            10
#define BM_TVENC_VTIMING1_RSRVD1            0xfc00
#define BF_TVENC_VTIMING1_RSRVD1(v)         (((v) << 10) & 0xfc00)
#define BP_TVENC_VTIMING1_LAST_FLD_LN       0
#define BM_TVENC_VTIMING1_LAST_FLD_LN       0x3ff
#define BF_TVENC_VTIMING1_LAST_FLD_LN(v)    (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_MISC
 * Address: 0xb0
 * SCT: yes
*/
#define HW_TVENC_MISC                       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xb0 + 0x0))
#define HW_TVENC_MISC_SET                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xb0 + 0x4))
#define HW_TVENC_MISC_CLR                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xb0 + 0x8))
#define HW_TVENC_MISC_TOG                   (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xb0 + 0xc))
#define BP_TVENC_MISC_RSRVD3                25
#define BM_TVENC_MISC_RSRVD3                0xfe000000
#define BF_TVENC_MISC_RSRVD3(v)             (((v) << 25) & 0xfe000000)
#define BP_TVENC_MISC_LPF_RST_OFF           16
#define BM_TVENC_MISC_LPF_RST_OFF           0x1ff0000
#define BF_TVENC_MISC_LPF_RST_OFF(v)        (((v) << 16) & 0x1ff0000)
#define BP_TVENC_MISC_RSRVD2                12
#define BM_TVENC_MISC_RSRVD2                0xf000
#define BF_TVENC_MISC_RSRVD2(v)             (((v) << 12) & 0xf000)
#define BP_TVENC_MISC_NTSC_LN_CNT           11
#define BM_TVENC_MISC_NTSC_LN_CNT           0x800
#define BF_TVENC_MISC_NTSC_LN_CNT(v)        (((v) << 11) & 0x800)
#define BP_TVENC_MISC_PAL_FSC_PHASE_ALT     10
#define BM_TVENC_MISC_PAL_FSC_PHASE_ALT     0x400
#define BF_TVENC_MISC_PAL_FSC_PHASE_ALT(v)  (((v) << 10) & 0x400)
#define BP_TVENC_MISC_FSC_PHASE_RST         8
#define BM_TVENC_MISC_FSC_PHASE_RST         0x300
#define BF_TVENC_MISC_FSC_PHASE_RST(v)      (((v) << 8) & 0x300)
#define BP_TVENC_MISC_BRUCHB                6
#define BM_TVENC_MISC_BRUCHB                0xc0
#define BF_TVENC_MISC_BRUCHB(v)             (((v) << 6) & 0xc0)
#define BP_TVENC_MISC_AGC_LVL_CTRL          4
#define BM_TVENC_MISC_AGC_LVL_CTRL          0x30
#define BF_TVENC_MISC_AGC_LVL_CTRL(v)       (((v) << 4) & 0x30)
#define BP_TVENC_MISC_RSRVD1                3
#define BM_TVENC_MISC_RSRVD1                0x8
#define BF_TVENC_MISC_RSRVD1(v)             (((v) << 3) & 0x8)
#define BP_TVENC_MISC_CS_INVERT_CTRL        2
#define BM_TVENC_MISC_CS_INVERT_CTRL        0x4
#define BF_TVENC_MISC_CS_INVERT_CTRL(v)     (((v) << 2) & 0x4)
#define BP_TVENC_MISC_Y_BLANK_CTRL          0
#define BM_TVENC_MISC_Y_BLANK_CTRL          0x3
#define BF_TVENC_MISC_Y_BLANK_CTRL(v)       (((v) << 0) & 0x3)

/**
 * Register: HW_TVENC_COLORSUB0
 * Address: 0xc0
 * SCT: yes
*/
#define HW_TVENC_COLORSUB0              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xc0 + 0x0))
#define HW_TVENC_COLORSUB0_SET          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xc0 + 0x4))
#define HW_TVENC_COLORSUB0_CLR          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xc0 + 0x8))
#define HW_TVENC_COLORSUB0_TOG          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xc0 + 0xc))
#define BP_TVENC_COLORSUB0_PHASE_INC    0
#define BM_TVENC_COLORSUB0_PHASE_INC    0xffffffff
#define BF_TVENC_COLORSUB0_PHASE_INC(v) (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_COLORSUB1
 * Address: 0xd0
 * SCT: yes
*/
#define HW_TVENC_COLORSUB1                  (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xd0 + 0x0))
#define HW_TVENC_COLORSUB1_SET              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xd0 + 0x4))
#define HW_TVENC_COLORSUB1_CLR              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xd0 + 0x8))
#define HW_TVENC_COLORSUB1_TOG              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xd0 + 0xc))
#define BP_TVENC_COLORSUB1_PHASE_OFFSET     0
#define BM_TVENC_COLORSUB1_PHASE_OFFSET     0xffffffff
#define BF_TVENC_COLORSUB1_PHASE_OFFSET(v)  (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_COPYPROTECT
 * Address: 0xe0
 * SCT: yes
*/
#define HW_TVENC_COPYPROTECT                    (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xe0 + 0x0))
#define HW_TVENC_COPYPROTECT_SET                (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xe0 + 0x4))
#define HW_TVENC_COPYPROTECT_CLR                (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xe0 + 0x8))
#define HW_TVENC_COPYPROTECT_TOG                (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xe0 + 0xc))
#define BP_TVENC_COPYPROTECT_RSRVD1             16
#define BM_TVENC_COPYPROTECT_RSRVD1             0xffff0000
#define BF_TVENC_COPYPROTECT_RSRVD1(v)          (((v) << 16) & 0xffff0000)
#define BP_TVENC_COPYPROTECT_WSS_ENBL           15
#define BM_TVENC_COPYPROTECT_WSS_ENBL           0x8000
#define BF_TVENC_COPYPROTECT_WSS_ENBL(v)        (((v) << 15) & 0x8000)
#define BP_TVENC_COPYPROTECT_CGMS_ENBL          14
#define BM_TVENC_COPYPROTECT_CGMS_ENBL          0x4000
#define BF_TVENC_COPYPROTECT_CGMS_ENBL(v)       (((v) << 14) & 0x4000)
#define BP_TVENC_COPYPROTECT_WSS_CGMS_DATA      0
#define BM_TVENC_COPYPROTECT_WSS_CGMS_DATA      0x3fff
#define BF_TVENC_COPYPROTECT_WSS_CGMS_DATA(v)   (((v) << 0) & 0x3fff)

/**
 * Register: HW_TVENC_CLOSEDCAPTION
 * Address: 0xf0
 * SCT: yes
*/
#define HW_TVENC_CLOSEDCAPTION              (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xf0 + 0x0))
#define HW_TVENC_CLOSEDCAPTION_SET          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xf0 + 0x4))
#define HW_TVENC_CLOSEDCAPTION_CLR          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xf0 + 0x8))
#define HW_TVENC_CLOSEDCAPTION_TOG          (*(volatile unsigned long *)(REGS_TVENC_BASE + 0xf0 + 0xc))
#define BP_TVENC_CLOSEDCAPTION_RSRVD1       20
#define BM_TVENC_CLOSEDCAPTION_RSRVD1       0xfff00000
#define BF_TVENC_CLOSEDCAPTION_RSRVD1(v)    (((v) << 20) & 0xfff00000)
#define BP_TVENC_CLOSEDCAPTION_CC_ENBL      18
#define BM_TVENC_CLOSEDCAPTION_CC_ENBL      0xc0000
#define BF_TVENC_CLOSEDCAPTION_CC_ENBL(v)   (((v) << 18) & 0xc0000)
#define BP_TVENC_CLOSEDCAPTION_CC_FILL      16
#define BM_TVENC_CLOSEDCAPTION_CC_FILL      0x30000
#define BF_TVENC_CLOSEDCAPTION_CC_FILL(v)   (((v) << 16) & 0x30000)
#define BP_TVENC_CLOSEDCAPTION_CC_DATA      0
#define BM_TVENC_CLOSEDCAPTION_CC_DATA      0xffff
#define BF_TVENC_CLOSEDCAPTION_CC_DATA(v)   (((v) << 0) & 0xffff)

/**
 * Register: HW_TVENC_COLORBURST
 * Address: 0x140
 * SCT: yes
*/
#define HW_TVENC_COLORBURST             (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x140 + 0x0))
#define HW_TVENC_COLORBURST_SET         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x140 + 0x4))
#define HW_TVENC_COLORBURST_CLR         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x140 + 0x8))
#define HW_TVENC_COLORBURST_TOG         (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x140 + 0xc))
#define BP_TVENC_COLORBURST_NBA         24
#define BM_TVENC_COLORBURST_NBA         0xff000000
#define BF_TVENC_COLORBURST_NBA(v)      (((v) << 24) & 0xff000000)
#define BP_TVENC_COLORBURST_PBA         16
#define BM_TVENC_COLORBURST_PBA         0xff0000
#define BF_TVENC_COLORBURST_PBA(v)      (((v) << 16) & 0xff0000)
#define BP_TVENC_COLORBURST_RSRVD1      12
#define BM_TVENC_COLORBURST_RSRVD1      0xf000
#define BF_TVENC_COLORBURST_RSRVD1(v)   (((v) << 12) & 0xf000)
#define BP_TVENC_COLORBURST_RSRVD2      0
#define BM_TVENC_COLORBURST_RSRVD2      0xfff
#define BF_TVENC_COLORBURST_RSRVD2(v)   (((v) << 0) & 0xfff)

/**
 * Register: HW_TVENC_MACROVISION0
 * Address: 0x150
 * SCT: yes
*/
#define HW_TVENC_MACROVISION0           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x150 + 0x0))
#define HW_TVENC_MACROVISION0_SET       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x150 + 0x4))
#define HW_TVENC_MACROVISION0_CLR       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x150 + 0x8))
#define HW_TVENC_MACROVISION0_TOG       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x150 + 0xc))
#define BP_TVENC_MACROVISION0_DATA      0
#define BM_TVENC_MACROVISION0_DATA      0xffffffff
#define BF_TVENC_MACROVISION0_DATA(v)   (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_MACROVISION1
 * Address: 0x160
 * SCT: yes
*/
#define HW_TVENC_MACROVISION1           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x160 + 0x0))
#define HW_TVENC_MACROVISION1_SET       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x160 + 0x4))
#define HW_TVENC_MACROVISION1_CLR       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x160 + 0x8))
#define HW_TVENC_MACROVISION1_TOG       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x160 + 0xc))
#define BP_TVENC_MACROVISION1_DATA      0
#define BM_TVENC_MACROVISION1_DATA      0xffffffff
#define BF_TVENC_MACROVISION1_DATA(v)   (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_MACROVISION2
 * Address: 0x170
 * SCT: yes
*/
#define HW_TVENC_MACROVISION2           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x170 + 0x0))
#define HW_TVENC_MACROVISION2_SET       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x170 + 0x4))
#define HW_TVENC_MACROVISION2_CLR       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x170 + 0x8))
#define HW_TVENC_MACROVISION2_TOG       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x170 + 0xc))
#define BP_TVENC_MACROVISION2_DATA      0
#define BM_TVENC_MACROVISION2_DATA      0xffffffff
#define BF_TVENC_MACROVISION2_DATA(v)   (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_MACROVISION3
 * Address: 0x180
 * SCT: yes
*/
#define HW_TVENC_MACROVISION3           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x180 + 0x0))
#define HW_TVENC_MACROVISION3_SET       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x180 + 0x4))
#define HW_TVENC_MACROVISION3_CLR       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x180 + 0x8))
#define HW_TVENC_MACROVISION3_TOG       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x180 + 0xc))
#define BP_TVENC_MACROVISION3_DATA      0
#define BM_TVENC_MACROVISION3_DATA      0xffffffff
#define BF_TVENC_MACROVISION3_DATA(v)   (((v) << 0) & 0xffffffff)

/**
 * Register: HW_TVENC_MACROVISION4
 * Address: 0x190
 * SCT: yes
*/
#define HW_TVENC_MACROVISION4               (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x190 + 0x0))
#define HW_TVENC_MACROVISION4_SET           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x190 + 0x4))
#define HW_TVENC_MACROVISION4_CLR           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x190 + 0x8))
#define HW_TVENC_MACROVISION4_TOG           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x190 + 0xc))
#define BP_TVENC_MACROVISION4_RSRVD2        24
#define BM_TVENC_MACROVISION4_RSRVD2        0xff000000
#define BF_TVENC_MACROVISION4_RSRVD2(v)     (((v) << 24) & 0xff000000)
#define BP_TVENC_MACROVISION4_MACV_TST      16
#define BM_TVENC_MACROVISION4_MACV_TST      0xff0000
#define BF_TVENC_MACROVISION4_MACV_TST(v)   (((v) << 16) & 0xff0000)
#define BP_TVENC_MACROVISION4_RSRVD1        11
#define BM_TVENC_MACROVISION4_RSRVD1        0xf800
#define BF_TVENC_MACROVISION4_RSRVD1(v)     (((v) << 11) & 0xf800)
#define BP_TVENC_MACROVISION4_DATA          0
#define BM_TVENC_MACROVISION4_DATA          0x7ff
#define BF_TVENC_MACROVISION4_DATA(v)       (((v) << 0) & 0x7ff)

/**
 * Register: HW_TVENC_DACCTRL
 * Address: 0x1a0
 * SCT: yes
*/
#define HW_TVENC_DACCTRL                        (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1a0 + 0x0))
#define HW_TVENC_DACCTRL_SET                    (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1a0 + 0x4))
#define HW_TVENC_DACCTRL_CLR                    (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1a0 + 0x8))
#define HW_TVENC_DACCTRL_TOG                    (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1a0 + 0xc))
#define BP_TVENC_DACCTRL_TEST3                  31
#define BM_TVENC_DACCTRL_TEST3                  0x80000000
#define BF_TVENC_DACCTRL_TEST3(v)               (((v) << 31) & 0x80000000)
#define BP_TVENC_DACCTRL_RSRVD1                 30
#define BM_TVENC_DACCTRL_RSRVD1                 0x40000000
#define BF_TVENC_DACCTRL_RSRVD1(v)              (((v) << 30) & 0x40000000)
#define BP_TVENC_DACCTRL_RSRVD2                 29
#define BM_TVENC_DACCTRL_RSRVD2                 0x20000000
#define BF_TVENC_DACCTRL_RSRVD2(v)              (((v) << 29) & 0x20000000)
#define BP_TVENC_DACCTRL_JACK1_DIS_DET_EN       28
#define BM_TVENC_DACCTRL_JACK1_DIS_DET_EN       0x10000000
#define BF_TVENC_DACCTRL_JACK1_DIS_DET_EN(v)    (((v) << 28) & 0x10000000)
#define BP_TVENC_DACCTRL_TEST2                  27
#define BM_TVENC_DACCTRL_TEST2                  0x8000000
#define BF_TVENC_DACCTRL_TEST2(v)               (((v) << 27) & 0x8000000)
#define BP_TVENC_DACCTRL_RSRVD3                 26
#define BM_TVENC_DACCTRL_RSRVD3                 0x4000000
#define BF_TVENC_DACCTRL_RSRVD3(v)              (((v) << 26) & 0x4000000)
#define BP_TVENC_DACCTRL_RSRVD4                 25
#define BM_TVENC_DACCTRL_RSRVD4                 0x2000000
#define BF_TVENC_DACCTRL_RSRVD4(v)              (((v) << 25) & 0x2000000)
#define BP_TVENC_DACCTRL_JACK1_DET_EN           24
#define BM_TVENC_DACCTRL_JACK1_DET_EN           0x1000000
#define BF_TVENC_DACCTRL_JACK1_DET_EN(v)        (((v) << 24) & 0x1000000)
#define BP_TVENC_DACCTRL_TEST1                  23
#define BM_TVENC_DACCTRL_TEST1                  0x800000
#define BF_TVENC_DACCTRL_TEST1(v)               (((v) << 23) & 0x800000)
#define BP_TVENC_DACCTRL_DISABLE_GND_DETECT     22
#define BM_TVENC_DACCTRL_DISABLE_GND_DETECT     0x400000
#define BF_TVENC_DACCTRL_DISABLE_GND_DETECT(v)  (((v) << 22) & 0x400000)
#define BP_TVENC_DACCTRL_JACK_DIS_ADJ           20
#define BM_TVENC_DACCTRL_JACK_DIS_ADJ           0x300000
#define BF_TVENC_DACCTRL_JACK_DIS_ADJ(v)        (((v) << 20) & 0x300000)
#define BP_TVENC_DACCTRL_GAINDN                 19
#define BM_TVENC_DACCTRL_GAINDN                 0x80000
#define BF_TVENC_DACCTRL_GAINDN(v)              (((v) << 19) & 0x80000)
#define BP_TVENC_DACCTRL_GAINUP                 18
#define BM_TVENC_DACCTRL_GAINUP                 0x40000
#define BF_TVENC_DACCTRL_GAINUP(v)              (((v) << 18) & 0x40000)
#define BP_TVENC_DACCTRL_INVERT_CLK             17
#define BM_TVENC_DACCTRL_INVERT_CLK             0x20000
#define BF_TVENC_DACCTRL_INVERT_CLK(v)          (((v) << 17) & 0x20000)
#define BP_TVENC_DACCTRL_SELECT_CLK             16
#define BM_TVENC_DACCTRL_SELECT_CLK             0x10000
#define BF_TVENC_DACCTRL_SELECT_CLK(v)          (((v) << 16) & 0x10000)
#define BP_TVENC_DACCTRL_BYPASS_ACT_CASCODE     15
#define BM_TVENC_DACCTRL_BYPASS_ACT_CASCODE     0x8000
#define BF_TVENC_DACCTRL_BYPASS_ACT_CASCODE(v)  (((v) << 15) & 0x8000)
#define BP_TVENC_DACCTRL_RSRVD5                 14
#define BM_TVENC_DACCTRL_RSRVD5                 0x4000
#define BF_TVENC_DACCTRL_RSRVD5(v)              (((v) << 14) & 0x4000)
#define BP_TVENC_DACCTRL_RSRVD6                 13
#define BM_TVENC_DACCTRL_RSRVD6                 0x2000
#define BF_TVENC_DACCTRL_RSRVD6(v)              (((v) << 13) & 0x2000)
#define BP_TVENC_DACCTRL_PWRUP1                 12
#define BM_TVENC_DACCTRL_PWRUP1                 0x1000
#define BF_TVENC_DACCTRL_PWRUP1(v)              (((v) << 12) & 0x1000)
#define BP_TVENC_DACCTRL_WELL_TOVDD             11
#define BM_TVENC_DACCTRL_WELL_TOVDD             0x800
#define BF_TVENC_DACCTRL_WELL_TOVDD(v)          (((v) << 11) & 0x800)
#define BP_TVENC_DACCTRL_RSRVD7                 10
#define BM_TVENC_DACCTRL_RSRVD7                 0x400
#define BF_TVENC_DACCTRL_RSRVD7(v)              (((v) << 10) & 0x400)
#define BP_TVENC_DACCTRL_RSRVD8                 9
#define BM_TVENC_DACCTRL_RSRVD8                 0x200
#define BF_TVENC_DACCTRL_RSRVD8(v)              (((v) << 9) & 0x200)
#define BP_TVENC_DACCTRL_DUMP_TOVDD1            8
#define BM_TVENC_DACCTRL_DUMP_TOVDD1            0x100
#define BF_TVENC_DACCTRL_DUMP_TOVDD1(v)         (((v) << 8) & 0x100)
#define BP_TVENC_DACCTRL_LOWER_SIGNAL           7
#define BM_TVENC_DACCTRL_LOWER_SIGNAL           0x80
#define BF_TVENC_DACCTRL_LOWER_SIGNAL(v)        (((v) << 7) & 0x80)
#define BP_TVENC_DACCTRL_RVAL                   4
#define BM_TVENC_DACCTRL_RVAL                   0x70
#define BF_TVENC_DACCTRL_RVAL(v)                (((v) << 4) & 0x70)
#define BP_TVENC_DACCTRL_NO_INTERNAL_TERM       3
#define BM_TVENC_DACCTRL_NO_INTERNAL_TERM       0x8
#define BF_TVENC_DACCTRL_NO_INTERNAL_TERM(v)    (((v) << 3) & 0x8)
#define BP_TVENC_DACCTRL_HALF_CURRENT           2
#define BM_TVENC_DACCTRL_HALF_CURRENT           0x4
#define BF_TVENC_DACCTRL_HALF_CURRENT(v)        (((v) << 2) & 0x4)
#define BP_TVENC_DACCTRL_CASC_ADJ               0
#define BM_TVENC_DACCTRL_CASC_ADJ               0x3
#define BF_TVENC_DACCTRL_CASC_ADJ(v)            (((v) << 0) & 0x3)

/**
 * Register: HW_TVENC_DACSTATUS
 * Address: 0x1b0
 * SCT: yes
*/
#define HW_TVENC_DACSTATUS                      (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1b0 + 0x0))
#define HW_TVENC_DACSTATUS_SET                  (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1b0 + 0x4))
#define HW_TVENC_DACSTATUS_CLR                  (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1b0 + 0x8))
#define HW_TVENC_DACSTATUS_TOG                  (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1b0 + 0xc))
#define BP_TVENC_DACSTATUS_RSRVD1               13
#define BM_TVENC_DACSTATUS_RSRVD1               0xffffe000
#define BF_TVENC_DACSTATUS_RSRVD1(v)            (((v) << 13) & 0xffffe000)
#define BP_TVENC_DACSTATUS_RSRVD2               12
#define BM_TVENC_DACSTATUS_RSRVD2               0x1000
#define BF_TVENC_DACSTATUS_RSRVD2(v)            (((v) << 12) & 0x1000)
#define BP_TVENC_DACSTATUS_RSRVD3               11
#define BM_TVENC_DACSTATUS_RSRVD3               0x800
#define BF_TVENC_DACSTATUS_RSRVD3(v)            (((v) << 11) & 0x800)
#define BP_TVENC_DACSTATUS_JACK1_DET_STATUS     10
#define BM_TVENC_DACSTATUS_JACK1_DET_STATUS     0x400
#define BF_TVENC_DACSTATUS_JACK1_DET_STATUS(v)  (((v) << 10) & 0x400)
#define BP_TVENC_DACSTATUS_RSRVD4               9
#define BM_TVENC_DACSTATUS_RSRVD4               0x200
#define BF_TVENC_DACSTATUS_RSRVD4(v)            (((v) << 9) & 0x200)
#define BP_TVENC_DACSTATUS_RSRVD5               8
#define BM_TVENC_DACSTATUS_RSRVD5               0x100
#define BF_TVENC_DACSTATUS_RSRVD5(v)            (((v) << 8) & 0x100)
#define BP_TVENC_DACSTATUS_JACK1_GROUNDED       7
#define BM_TVENC_DACSTATUS_JACK1_GROUNDED       0x80
#define BF_TVENC_DACSTATUS_JACK1_GROUNDED(v)    (((v) << 7) & 0x80)
#define BP_TVENC_DACSTATUS_RSRVD6               6
#define BM_TVENC_DACSTATUS_RSRVD6               0x40
#define BF_TVENC_DACSTATUS_RSRVD6(v)            (((v) << 6) & 0x40)
#define BP_TVENC_DACSTATUS_RSRVD7               5
#define BM_TVENC_DACSTATUS_RSRVD7               0x20
#define BF_TVENC_DACSTATUS_RSRVD7(v)            (((v) << 5) & 0x20)
#define BP_TVENC_DACSTATUS_JACK1_DIS_DET_IRQ    4
#define BM_TVENC_DACSTATUS_JACK1_DIS_DET_IRQ    0x10
#define BF_TVENC_DACSTATUS_JACK1_DIS_DET_IRQ(v) (((v) << 4) & 0x10)
#define BP_TVENC_DACSTATUS_RSRVD8               3
#define BM_TVENC_DACSTATUS_RSRVD8               0x8
#define BF_TVENC_DACSTATUS_RSRVD8(v)            (((v) << 3) & 0x8)
#define BP_TVENC_DACSTATUS_RSRVD9               2
#define BM_TVENC_DACSTATUS_RSRVD9               0x4
#define BF_TVENC_DACSTATUS_RSRVD9(v)            (((v) << 2) & 0x4)
#define BP_TVENC_DACSTATUS_JACK1_DET_IRQ        1
#define BM_TVENC_DACSTATUS_JACK1_DET_IRQ        0x2
#define BF_TVENC_DACSTATUS_JACK1_DET_IRQ(v)     (((v) << 1) & 0x2)
#define BP_TVENC_DACSTATUS_ENIRQ_JACK           0
#define BM_TVENC_DACSTATUS_ENIRQ_JACK           0x1
#define BF_TVENC_DACSTATUS_ENIRQ_JACK(v)        (((v) << 0) & 0x1)

/**
 * Register: HW_TVENC_VDACTEST
 * Address: 0x1c0
 * SCT: yes
*/
#define HW_TVENC_VDACTEST                           (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1c0 + 0x0))
#define HW_TVENC_VDACTEST_SET                       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1c0 + 0x4))
#define HW_TVENC_VDACTEST_CLR                       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1c0 + 0x8))
#define HW_TVENC_VDACTEST_TOG                       (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1c0 + 0xc))
#define BP_TVENC_VDACTEST_RSRVD1                    14
#define BM_TVENC_VDACTEST_RSRVD1                    0xffffc000
#define BF_TVENC_VDACTEST_RSRVD1(v)                 (((v) << 14) & 0xffffc000)
#define BP_TVENC_VDACTEST_ENABLE_PIX_INT_GAIN       13
#define BM_TVENC_VDACTEST_ENABLE_PIX_INT_GAIN       0x2000
#define BF_TVENC_VDACTEST_ENABLE_PIX_INT_GAIN(v)    (((v) << 13) & 0x2000)
#define BP_TVENC_VDACTEST_BYPASS_PIX_INT            12
#define BM_TVENC_VDACTEST_BYPASS_PIX_INT            0x1000
#define BF_TVENC_VDACTEST_BYPASS_PIX_INT(v)         (((v) << 12) & 0x1000)
#define BP_TVENC_VDACTEST_BYPASS_PIX_INT_DROOP      11
#define BM_TVENC_VDACTEST_BYPASS_PIX_INT_DROOP      0x800
#define BF_TVENC_VDACTEST_BYPASS_PIX_INT_DROOP(v)   (((v) << 11) & 0x800)
#define BP_TVENC_VDACTEST_TEST_FIFO_FULL            10
#define BM_TVENC_VDACTEST_TEST_FIFO_FULL            0x400
#define BF_TVENC_VDACTEST_TEST_FIFO_FULL(v)         (((v) << 10) & 0x400)
#define BP_TVENC_VDACTEST_DATA                      0
#define BM_TVENC_VDACTEST_DATA                      0x3ff
#define BF_TVENC_VDACTEST_DATA(v)                   (((v) << 0) & 0x3ff)

/**
 * Register: HW_TVENC_VERSION
 * Address: 0x1d0
 * SCT: no
*/
#define HW_TVENC_VERSION            (*(volatile unsigned long *)(REGS_TVENC_BASE + 0x1d0))
#define BP_TVENC_VERSION_MAJOR      24
#define BM_TVENC_VERSION_MAJOR      0xff000000
#define BF_TVENC_VERSION_MAJOR(v)   (((v) << 24) & 0xff000000)
#define BP_TVENC_VERSION_MINOR      16
#define BM_TVENC_VERSION_MINOR      0xff0000
#define BF_TVENC_VERSION_MINOR(v)   (((v) << 16) & 0xff0000)
#define BP_TVENC_VERSION_STEP       0
#define BM_TVENC_VERSION_STEP       0xffff
#define BF_TVENC_VERSION_STEP(v)    (((v) << 0) & 0xffff)

#endif /* __HEADERGEN__IMX233__TVENC__H__ */
